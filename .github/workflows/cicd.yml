name: SonarQube
on:
  push:
    branches:
      - staging-sonar
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze with SonarQube
    runs-on: ubuntu-latest

    env:
      SONAR_HOST_URL: http://your-sonarqube-domain:9000  # ðŸ‘ˆ Set your SonarQube URL here

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('MyWebApp/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache SonarQube scanner
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build with Maven
        run: mvn clean install -f MyWebApp/pom.xml

      - name: Run unit tests
        run: mvn test -f MyWebApp/pom.xml

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
        run: |
          mvn -f MyWebApp/pom.xml \
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=MyWebApp \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.login=${SONAR_TOKEN}
